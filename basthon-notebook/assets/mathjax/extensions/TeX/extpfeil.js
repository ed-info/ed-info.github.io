MathJax.Extension["TeX/extpfeil"]={version:"2.7.9"},MathJax.Hub.Register.StartupHook("TeX Jax Ready",(function(){var t=MathJax.InputJax.TeX,e=t.Definitions;e.Add({macros:{xtwoheadrightarrow:["Extension","AMSmath"],xtwoheadleftarrow:["Extension","AMSmath"],xmapsto:["Extension","AMSmath"],xlongequal:["Extension","AMSmath"],xtofrom:["Extension","AMSmath"],Newextarrow:["Extension","AMSmath"]}},null,!0),MathJax.Hub.Register.StartupHook("TeX AMSmath Ready",(function(){MathJax.Hub.Insert(e,{macros:{xtwoheadrightarrow:["xArrow",8608,12,16],xtwoheadleftarrow:["xArrow",8606,17,13],xmapsto:["xArrow",8614,6,7],xlongequal:["xArrow",61,7,7],xtofrom:["xArrow",8644,12,12],Newextarrow:"NewExtArrow"}})})),t.Parse.Augment({NewExtArrow:function(e){var r=this.GetArgument(e),a=this.GetArgument(e),o=this.GetArgument(e);r.match(/^\\([a-z]+|.)$/i)||t.Error(["NewextarrowArg1","First argument to %1 must be a control sequence name",e]),a.match(/^(\d+),(\d+)$/)||t.Error(["NewextarrowArg2","Second argument to %1 must be two integers separated by a comma",e]),o.match(/^(\d+|0x[0-9A-F]+)$/i)||t.Error(["NewextarrowArg3","Third argument to %1 must be a unicode character number",e]),r=r.substr(1),a=a.split(","),o=parseInt(o),this.setDef(r,["xArrow",o,parseInt(a[0]),parseInt(a[1])])}}),MathJax.Hub.Startup.signal.Post("TeX extpfeil Ready")})),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/extpfeil.js");