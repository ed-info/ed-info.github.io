MathJax.Extension["TeX/unicode"]={version:"2.7.9",unicode:{},config:MathJax.Hub.CombineConfig("TeX.unicode",{fonts:"STIXGeneral,'Arial Unicode MS'"})},MathJax.Hub.Register.StartupHook("TeX Jax Ready",(function(){var t=MathJax.InputJax.TeX,e=MathJax.ElementJax.mml,a=MathJax.Extension["TeX/unicode"].unicode;t.Definitions.Add({macros:{unicode:"Unicode"}},null,!0),t.Parse.Augment({Unicode:function(n){var i,o=this.GetBrackets(n);o&&(o.replace(/ /g,"").match(/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/)?(o=o.replace(/ /g,"").split(/,/),i=this.GetBrackets(n)):(i=o,o=null));var u=this.trimSpaces(this.GetArgument(n)).replace(/^0x/,"x");u.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)||t.Error(["BadUnicode","Argument to \\unicode must be a number"]);var c=parseInt(u.match(/^x/)?"0"+u:u);a[c]?i||(i=a[c][2]):a[c]=[800,200,i,c],o&&(a[c][0]=Math.floor(1e3*o[0]),a[c][1]=Math.floor(1e3*o[1]));var d=this.stack.env.font,r={};i?(a[c][2]=r.fontfamily=i.replace(/"/g,"'"),d&&(d.match(/bold/)&&(r.fontweight="bold"),d.match(/italic|-mathit/)&&(r.fontstyle="italic"))):d&&(r.mathvariant=d),r.unicode=[].concat(a[c]),this.Push(e.mtext(e.entity("#"+u)).With(r))}}),MathJax.Hub.Startup.signal.Post("TeX unicode Ready")})),MathJax.Hub.Register.StartupHook("HTML-CSS Jax Ready",(function(){var t=MathJax.ElementJax.mml,e=MathJax.Extension["TeX/unicode"].config.fonts,a=t.mbase.prototype.HTMLgetVariant;t.mbase.Augment({HTMLgetVariant:function(){var t=a.apply(this,arguments);if(t.unicode&&(delete t.unicode,delete t.FONTS),!this.unicode)return t;t.unicode=!0,t.defaultFont||((t=MathJax.Hub.Insert({},t)).defaultFont={family:e});var n=this.unicode[2];return n?n+=","+e:n=e,t.defaultFont[this.unicode[3]]=[this.unicode[0],this.unicode[1],500,0,500,{isUnknown:!0,isUnicode:!0,font:n}],t}})})),MathJax.Hub.Register.StartupHook("SVG Jax Ready",(function(){var t=MathJax.ElementJax.mml,e=MathJax.Extension["TeX/unicode"].config.fonts,a=t.mbase.prototype.SVGgetVariant;t.mbase.Augment({SVGgetVariant:function(){var t=a.call(this);return t.unicode&&(delete t.unicode,delete t.FONTS),this.unicode?(t.unicode=!0,t.forceFamily||(t=MathJax.Hub.Insert({},t)),t.defaultFamily=e,t.noRemap=!0,t.h=this.unicode[0],t.d=this.unicode[1],t):t}})})),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/unicode.js");