{"version":3,"file":"assets/5149.c53a4ee816d851b8a8f0.js","mappings":"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","sources":["webpack://@basthon/basthon-notebook/./node_modules/@basthon/kernel-base/lib/kernel.js","webpack://@basthon/basthon-notebook/./node_modules/@basthon/kernel-base/lib/version.js","webpack://@basthon/basthon-notebook/./node_modules/@basthon/kernel-python3/lib/kernel.js"],"sourcesContent":["import { PromiseDelegate } from \"promise-delegate\";\nimport { VERSION } from './version';\n/**\n * An error thrown by not implemented API functions.\n */\nclass NotImplementedError extends Error {\n    constructor(funcName) {\n        super(`Function ${funcName} not implemented!`);\n        this.name = \"NotImplementedError\";\n    }\n}\n/**\n * Event for Basthon's dispatch/listen.\n */\nclass BasthonEvent extends Event {\n    constructor(id, data) {\n        super(id);\n        this.detail = data;\n    }\n}\n/**\n * API that any Basthon kernel should fill to be supported\n * in console/notebook.\n */\nexport class KernelBase {\n    constructor(options) {\n        this._ready = false;\n        this._loaded = new PromiseDelegate();\n        this._execution_count = 0;\n        this._pendingInput = false;\n        // root path where kernel is installed\n        this._rootPath = options.rootPath;\n    }\n    /**\n     * Kernel version number (string).\n     */\n    version() { return VERSION; }\n    ;\n    /**\n     * Language implemented in the kernel (string).\n     * Generally lower case.\n     */\n    language() { throw new NotImplementedError(\"language\"); }\n    ;\n    /**\n     * Language name implemented in the kernel (string).\n     * As it should be displayed in text.\n     */\n    languageName() { throw new NotImplementedError(\"languageName\"); }\n    ;\n    /**\n     * Script (module) file extensions\n     */\n    moduleExts() {\n        throw new NotImplementedError(\"moduleExts\");\n    }\n    ;\n    /**\n     * Launch the kernel.\n     */\n    async launch() { throw new NotImplementedError(\"launch\"); }\n    ;\n    /**\n     * Execution count getter.\n     */\n    get execution_count() { return this._execution_count; }\n    /**\n     * Async code evaluation that resolves with the result.\n     */\n    evalAsync(code, outCallback, errCallback, data = null) {\n        throw new NotImplementedError(\"evalAsync\");\n    }\n    ;\n    restart() { throw new NotImplementedError(\"restart\"); }\n    ;\n    async putFile(filename, content) {\n        throw new NotImplementedError(\"putFile\");\n    }\n    ;\n    async putModule(filename, content) {\n        throw new NotImplementedError(\"putModule\");\n    }\n    ;\n    userModules() { return []; }\n    ;\n    getFile(path) { throw new NotImplementedError(\"getFile\"); }\n    ;\n    getUserModuleFile(filename) {\n        throw new NotImplementedError(\"getUserModuleFile\");\n    }\n    ;\n    more(source) { throw new NotImplementedError(\"more\"); }\n    ;\n    complete(code) { return []; }\n    ;\n    banner() { return `Welcome to the ${this.languageName()} REPL!`; }\n    ;\n    ps1() { return \">>> \"; }\n    ;\n    ps2() { return \"... \"; }\n    ;\n    /**\n     * Initialize the kernel.\n     */\n    async init() {\n        try {\n            await this.launch();\n        }\n        catch (error) {\n            this._loaded.reject(error);\n            return;\n        }\n        // connecting eval to basthon.eval.request event.\n        this.addEventListener(\"eval.request\", this.evalFromEvent.bind(this));\n        this._ready = true;\n        this._loaded.resolve();\n    }\n    /**\n     * Is the kernel ready?\n     */\n    get ready() { return this._ready; }\n    /**\n     * Promise that resolve when the kernel is loaded.\n     */\n    async loaded() { await this._loaded.promise; }\n    /**\n     * Root for kernel files. This is always the language directory\n     * inside the version number directory inside the kernel directory.\n     */\n    basthonRoot(absolute = false) {\n        let url = this._rootPath + \"/\" + this.version() + \"/\" + this.language();\n        if (absolute && !url.startsWith(\"http\")) {\n            const base = window.location.origin + window.location.pathname;\n            url = base.substring(0, base.lastIndexOf('/')) + \"/\" + url;\n        }\n        return url;\n    }\n    /**\n     * Downloading data (bytes array or data URL) as filename\n     * (opening browser dialog).\n     */\n    download(data, filename) {\n        if (!(typeof data === 'string' || data instanceof String)) {\n            const blob = new Blob([data], { type: \"application/octet-stream\" });\n            data = window.URL.createObjectURL(blob);\n        }\n        const anchor = document.createElement(\"a\");\n        anchor.download = filename;\n        anchor.href = data;\n        anchor.target = \"_blank\";\n        anchor.style.display = \"none\"; // just to be safe!\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n    }\n    ;\n    /**\n     * Dynamically load a script asynchronously.\n     */\n    static loadScript(url) {\n        return new Promise(function (resolve, reject) {\n            let script = document.createElement('script');\n            script.onload = resolve;\n            script.onerror = reject;\n            script.src = url;\n            document.head.appendChild(script);\n        });\n    }\n    ;\n    /**\n     * Wrapper around document.dispatchEvent.\n     * It adds the 'basthon.' prefix to each event name and\n     * manage the event lookup to retreive relevent data.\n     */\n    dispatchEvent(eventName, data) {\n        document.dispatchEvent(new BasthonEvent(`basthon.${eventName}`, data));\n    }\n    ;\n    /**\n     * Wrapper around document.addEventListener.\n     * It manages the 'basthon.' prefix to each event name and\n     * manage the event lookup to retreive relevent data.\n     */\n    addEventListener(eventName, callback) {\n        document.addEventListener(`basthon.${eventName}`, function (event) { callback(event.detail); });\n    }\n    ;\n    /**\n     * Send eval.input event then wait for the user response and return it.\n     */\n    async inputAsync(prompt, password = false, data = undefined) {\n        data = this.clone(data);\n        data.content = { prompt, password };\n        const promise = new Promise(function (resolve, reject) {\n            data.resolve = resolve;\n            data.reject = reject;\n        });\n        this._pendingInput = true;\n        this.dispatchEvent(\"eval.input\", data);\n        const res = await promise;\n        this._pendingInput = false;\n        return res;\n    }\n    /**\n     * Simple clone via JSON copy.\n     */\n    clone(obj) {\n        // simple trick that is enough for our purpose.\n        return JSON.parse(JSON.stringify(obj));\n    }\n    ;\n    /**\n     * Put a ressource (file or module).\n     * Detection is based on extension.\n     */\n    async putRessource(filename, content) {\n        var _a;\n        const ext = (_a = filename.split('.').pop()) !== null && _a !== void 0 ? _a : \"\";\n        if (this.moduleExts().includes(ext)) {\n            return await this.putModule(filename, content);\n        }\n        else {\n            return await this.putFile(filename, content);\n        }\n    }\n    ;\n    /**\n     * Is an input pending?\n     */\n    pendingInput() {\n        return this._pendingInput;\n    }\n    /**\n     * Internal. Code evaluation after an eval.request event.\n     */\n    async evalFromEvent(data) {\n        const stdCallback = (std) => (text) => {\n            let dataEvent = this.clone(data);\n            dataEvent.stream = std;\n            dataEvent.content = text;\n            this.dispatchEvent(\"eval.output\", dataEvent);\n        };\n        const outCallback = stdCallback(\"stdout\");\n        const errCallback = stdCallback(\"stderr\");\n        let args;\n        try {\n            args = await this.evalAsync(data.code, outCallback, errCallback, data);\n        }\n        catch (error) {\n            errCallback(error.toString());\n            const dataEvent = this.clone(data);\n            dataEvent.error = error;\n            dataEvent.execution_count = this.execution_count;\n            this.dispatchEvent(\"eval.error\", dataEvent);\n            return;\n        }\n        if (args == null)\n            return; // this should not happend\n        const result = args[0];\n        const executionCount = args[1];\n        let dataEvent = this.clone(data);\n        dataEvent.execution_count = executionCount;\n        if (result != null)\n            dataEvent.result = result;\n        this.dispatchEvent(\"eval.finished\", dataEvent);\n    }\n}\n","export const VERSION = \"0.60.2\";\n","import { KernelBase } from \"@basthon/kernel-base\";\nconst PYODIDE_VERSION = \"0.22.1\";\n/**\n * A Python kernel that satisfies Basthon's API.\n */\nexport class KernelPython3 extends KernelBase {\n    constructor(options) {\n        var _a;\n        super(options);\n        /**\n         * Where to find pyodide.js (private).\n         */\n        this._pyodideURLs = [\n            `https://cdn.jsdelivr.net/pyodide/v{PYODIDE_VERSION}/full/pyodide.js`,\n        ];\n        this.__kernel__ = null;\n        this.pythonVersion = \"\";\n        // for locally installed Pyodide\n        this._pyodideURLs.unshift(`${this.basthonRoot()}/pyodide/pyodide.js`);\n        this._pyodideURLs = (_a = options === null || options === void 0 ? void 0 : options.pyodideURLs) !== null && _a !== void 0 ? _a : this._pyodideURLs;\n    }\n    /**\n     * Get the URL of Basthon modules dir.\n     */\n    basthonModulesRoot(absolute = false) {\n        return this.basthonRoot(absolute) + \"/modules\";\n    }\n    language() {\n        return \"python3\";\n    }\n    languageName() {\n        return \"Python 3\";\n    }\n    moduleExts() {\n        return [\"py\"];\n    }\n    /**\n     * What to do when loaded (private).\n     */\n    async _onload() {\n        const pyodide = window.pyodide;\n        // reformat repodata\n        const packages = pyodide._api.repodata_packages;\n        for (let p of Object.keys(packages)) {\n            const item = packages[p];\n            item.file_name = item.file_name.replace(\"{basthonRoot}\", this.basthonRoot(true));\n        }\n        // get the version of Python from Python\n        this.pythonVersion = pyodide.runPython(\"import platform ; platform.python_version()\");\n        // load basthon and get kernel\n        await pyodide.loadPackage(\"basthon\");\n        this.__kernel__ = pyodide.pyimport(\"basthon\").__kernel__;\n    }\n    /**\n     * Start the Basthon kernel asynchronously.\n     */\n    async launch() {\n        let pyodideURL = this._pyodideURLs[0];\n        for (let url of this._pyodideURLs) {\n            url = url.replace(\"{PYODIDE_VERSION}\", PYODIDE_VERSION);\n            try {\n                const response = await fetch(url, { method: \"HEAD\" });\n                if (response.ok) {\n                    pyodideURL = url;\n                    break;\n                }\n            }\n            catch (e) { }\n        }\n        try {\n            await KernelPython3.loadScript(pyodideURL);\n        }\n        catch (error) {\n            console.log(error);\n            console.error(\"Can't load pyodide.js\");\n            throw error;\n        }\n        if (window.loadPyodide == null) {\n            console.log(\"window.loadPyodide is null!\");\n            throw new Error(\"Can't load pyodide.js\");\n        }\n        try {\n            // loading with custom repodata.json\n            window.pyodide = await window.loadPyodide({\n                lockFileURL: this.basthonRoot() + \"/repodata.json\",\n            });\n        }\n        catch (error) {\n            console.log(error);\n            console.error(\"Can't load Python from Pyodide\");\n            throw error;\n        }\n        await this._onload();\n    }\n    /**\n     * Execution count getter overload.\n     */\n    get execution_count() {\n        return this.__kernel__.execution_count();\n    }\n    /**\n     * Basthon async code evaluation function.\n     */\n    async evalAsync(code, outCallback, errCallback, data = null) {\n        if (typeof outCallback === \"undefined\") {\n            outCallback = function (text) {\n                console.log(text);\n            };\n        }\n        if (typeof errCallback === \"undefined\") {\n            errCallback = function (text) {\n                console.error(text);\n            };\n        }\n        // dependencies are loaded by eval\n        const proxy = await this.__kernel__.eval(code, outCallback, errCallback, data);\n        // when an error occures, proxy should be the error message\n        if (!window.pyodide.isPyProxy(proxy))\n            throw proxy;\n        const res = proxy.toJs({\n            create_proxies: false,\n            dict_converter: Object.fromEntries,\n        });\n        proxy.destroy();\n        return res;\n    }\n    /**\n     * Restart the kernel.\n     */\n    restart() {\n        return this.__kernel__.restart();\n    }\n    /**\n     * Put a file on the local (emulated) filesystem.\n     */\n    async putFile(filename, content) {\n        this.__kernel__.put_file(filename, content);\n    }\n    /**\n     * Put an importable module on the local (emulated) filesystem\n     * and load dependencies.\n     */\n    async putModule(filename, content) {\n        return await this.__kernel__.put_module(filename, content);\n    }\n    /**\n     * List modules launched via putModule.\n     */\n    userModules() {\n        const proxy = this.__kernel__.user_modules();\n        if (!window.pyodide.isPyProxy(proxy))\n            return proxy;\n        const res = proxy.toJs();\n        proxy.destroy();\n        return res;\n    }\n    /**\n     * Download a file from the VFS.\n     */\n    getFile(path) {\n        return this.__kernel__.get_file(path);\n    }\n    /**\n     * Download a user module file.\n     */\n    getUserModuleFile(filename) {\n        return this.__kernel__.get_user_module_file(filename);\n    }\n    /**\n     * Is the source ready to be evaluated or want we more?\n     * Usefull to set ps1/ps2 for teminal prompt.\n     */\n    more(source) {\n        return this.__kernel__.more(source);\n    }\n    /**\n     * Mimic the CPython's REPL banner.\n     */\n    banner() {\n        /* We don't return this.__kernel__.banner();\n         * since the banner should be available ASAP.\n         * In tests, we check this.banner() ===  this.__kernel__.banner().\n         */\n        return `Python 3.10.2 (main, Jan 25 2023 18:32:53) on WebAssembly/Emscripten\\nType \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.`;\n    }\n    /**\n     * Complete a code at the end (usefull for tab completion).\n     *\n     * Returns an array of two elements: the list of completions\n     * and the start index.\n     */\n    complete(code) {\n        const proxy = this.__kernel__.complete(code);\n        if (!window.pyodide.isPyProxy(proxy))\n            return proxy;\n        const res = proxy.toJs();\n        proxy.destroy();\n        return res;\n    }\n    /**\n     * Change current directory (Python's virtual FS).\n     */\n    chdir(path) {\n        window.pyodide._module.FS.chdir(path);\n    }\n    /**\n     * Create directory (Python's virtual FS).\n     */\n    mkdir(path) {\n        window.pyodide._module.FS.mkdir(path);\n    }\n}\n"],"names":["NotImplementedError","Error","constructor","funcName","super","this","name","BasthonEvent","Event","id","data","detail","KernelBase","options","_ready","_loaded","PromiseDelegate","_execution_count","_pendingInput","_rootPath","rootPath","version","language","languageName","moduleExts","async","execution_count","evalAsync","code","outCallback","errCallback","restart","filename","content","userModules","getFile","path","getUserModuleFile","more","source","complete","banner","ps1","ps2","launch","error","reject","addEventListener","evalFromEvent","bind","resolve","ready","promise","basthonRoot","absolute","url","startsWith","base","window","location","origin","pathname","substring","lastIndexOf","download","String","blob","Blob","type","URL","createObjectURL","anchor","document","createElement","href","target","style","display","body","appendChild","click","removeChild","static","Promise","script","onload","onerror","src","head","dispatchEvent","eventName","callback","event","prompt","password","clone","res","obj","JSON","parse","stringify","_a","ext","split","pop","includes","putModule","putFile","pendingInput","stdCallback","std","text","dataEvent","stream","args","toString","result","executionCount","KernelPython3","_pyodideURLs","__kernel__","pythonVersion","unshift","pyodideURLs","basthonModulesRoot","pyodide","packages","_api","repodata_packages","p","Object","keys","item","file_name","replace","runPython","loadPackage","pyimport","pyodideURL","fetch","method","ok","e","loadScript","console","log","loadPyodide","lockFileURL","_onload","proxy","eval","isPyProxy","toJs","create_proxies","dict_converter","fromEntries","destroy","put_file","put_module","user_modules","get_file","get_user_module_file","chdir","_module","FS","mkdir"],"sourceRoot":""}