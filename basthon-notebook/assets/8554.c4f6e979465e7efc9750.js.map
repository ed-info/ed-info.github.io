{"version":3,"file":"assets/8554.c4f6e979465e7efc9750.js","mappings":"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","sources":["webpack://@basthon/basthon-notebook/./node_modules/codemirror/mode/yaml-frontmatter/yaml-frontmatter.js","webpack://@basthon/basthon-notebook/./node_modules/codemirror/mode/yaml/yaml.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../yaml/yaml\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../yaml/yaml\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function (CodeMirror) {\n\n  var START = 0, FRONTMATTER = 1, BODY = 2\n\n  // a mixed mode for Markdown text with an optional YAML front matter\n  CodeMirror.defineMode(\"yaml-frontmatter\", function (config, parserConfig) {\n    var yamlMode = CodeMirror.getMode(config, \"yaml\")\n    var innerMode = CodeMirror.getMode(config, parserConfig && parserConfig.base || \"gfm\")\n\n    function localMode(state) {\n      return state.state == FRONTMATTER ? {mode: yamlMode, state: state.yaml} : {mode: innerMode, state: state.inner}\n    }\n\n    return {\n      startState: function () {\n        return {\n          state: START,\n          yaml: null,\n          inner: CodeMirror.startState(innerMode)\n        }\n      },\n      copyState: function (state) {\n        return {\n          state: state.state,\n          yaml: state.yaml && CodeMirror.copyState(yamlMode, state.yaml),\n          inner: CodeMirror.copyState(innerMode, state.inner)\n        }\n      },\n      token: function (stream, state) {\n        if (state.state == START) {\n          if (stream.match('---', false)) {\n            state.state = FRONTMATTER\n            state.yaml = CodeMirror.startState(yamlMode)\n            return yamlMode.token(stream, state.yaml)\n          } else {\n            state.state = BODY\n            return innerMode.token(stream, state.inner)\n          }\n        } else if (state.state == FRONTMATTER) {\n          var end = stream.sol() && stream.match(/(---|\\.\\.\\.)/, false)\n          var style = yamlMode.token(stream, state.yaml)\n          if (end) {\n            state.state = BODY\n            state.yaml = null\n          }\n          return style\n        } else {\n          return innerMode.token(stream, state.inner)\n        }\n      },\n      innerMode: localMode,\n      indent: function(state, a, b) {\n        var m = localMode(state)\n        return m.mode.indent ? m.mode.indent(m.state, a, b) : CodeMirror.Pass\n      },\n      blankLine: function (state) {\n        var m = localMode(state)\n        if (m.mode.blankLine) return m.mode.blankLine(m.state)\n      }\n    }\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"yaml\", function() {\n\n  var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n  var keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\n  return {\n    token: function(stream, state) {\n      var ch = stream.peek();\n      var esc = state.escaped;\n      state.escaped = false;\n      /* comments */\n      if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n        return \"string\";\n\n      if (state.literal && stream.indentation() > state.keyCol) {\n        stream.skipToEnd(); return \"string\";\n      } else if (state.literal) { state.literal = false; }\n      if (stream.sol()) {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        /* document start */\n        if(stream.match('---')) { return \"def\"; }\n        /* document end */\n        if (stream.match('...')) { return \"def\"; }\n        /* array list item */\n        if (stream.match(/\\s*-\\s+/)) { return 'meta'; }\n      }\n      /* inline pairs/lists */\n      if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n        if (ch == '{')\n          state.inlinePairs++;\n        else if (ch == '}')\n          state.inlinePairs--;\n        else if (ch == '[')\n          state.inlineList++;\n        else\n          state.inlineList--;\n        return 'meta';\n      }\n\n      /* list separator */\n      if (state.inlineList > 0 && !esc && ch == ',') {\n        stream.next();\n        return 'meta';\n      }\n      /* pairs separator */\n      if (state.inlinePairs > 0 && !esc && ch == ',') {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        stream.next();\n        return 'meta';\n      }\n\n      /* start of value of a pair */\n      if (state.pairStart) {\n        /* block literals */\n        if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n        /* references */\n        if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable-2'; }\n        /* numbers */\n        if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n        if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n        /* keywords */\n        if (stream.match(keywordRegex)) { return 'keyword'; }\n      }\n\n      /* pairs (associative arrays) -> key */\n      if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n        state.pair = true;\n        state.keyCol = stream.indentation();\n        return \"atom\";\n      }\n      if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n      /* nothing found, continue */\n      state.pairStart = false;\n      state.escaped = (ch == '\\\\');\n      stream.next();\n      return null;\n    },\n    startState: function() {\n      return {\n        pair: false,\n        pairStart: false,\n        keyCol: 0,\n        inlinePairs: 0,\n        inlineList: 0,\n        literal: false,\n        escaped: false\n      };\n    },\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\nCodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n\n});\n"],"names":["CodeMirror","defineMode","config","parserConfig","yamlMode","getMode","innerMode","base","localMode","state","mode","yaml","inner","startState","copyState","token","stream","match","end","sol","style","indent","a","b","m","Pass","blankLine","keywordRegex","RegExp","join","ch","peek","esc","escaped","pos","test","string","charAt","skipToEnd","literal","indentation","keyCol","pair","pairStart","inlinePairs","inlineList","next","lineComment","fold","defineMIME","mod"],"sourceRoot":""}