{"version":3,"file":"assets/5288.9f68bbabc62be24d36aa.js","mappings":"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","sources":["webpack://@basthon/basthon-notebook/./node_modules/codemirror/mode/django/django.js","webpack://@basthon/basthon-notebook/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"names":["CodeMirror","defineMode","keywords","filters","operators","wordOperators","tokenBase","stream","state","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","startState","token","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","overlayMode","defineMIME","mod","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","parserConfig","htmlMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","test","current","toLowerCase","hasOwnProperty","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","indent","eol","copyState","local","textAfter","line","Pass","innerMode"],"sourceRoot":""}